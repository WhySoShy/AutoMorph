using System.CodeDom.Compiler;
using IncrementialMapper.SyntaxProviders.Enums;

namespace IncrementialMapper.SyntaxProviders;

internal static class FormatProvider
{
    private const string AUTO_GENERATED_COMMENT = "/// <auto-generated />";

    public static IndentedTextWriter AppendFormat(this IndentedTextWriter writer, FormatType formatType, IndentType indentationType)
    {
        if (indentationType is IndentType.Outdent)
            writer.Indent--;
        
        writer.Write((char)formatType);
        
        if (indentationType is IndentType.Indent)
            writer.Indent++;
        
        return writer;
    }

    public static IndentedTextWriter AppendIndentation(this IndentedTextWriter writer, IndentType indentationType)
    {
        switch (indentationType)
        {
            case IndentType.Indent:
                writer.Indent++;
                break;
            case IndentType.Outdent:
                writer.Indent--;
                break;
        }
        
        return writer;
    }
    
    public static IndentedTextWriter AppendAutoGeneratedComment(this IndentedTextWriter writer)
    {
        return writer
                .Append(AUTO_GENERATED_COMMENT)
                .AppendLine();
    }

    /// <summary>
    /// Appends into a new line.
    /// </summary>
    public static IndentedTextWriter AppendLine(this IndentedTextWriter writer, int newlineCount = 1)
    {
        for(var i = 0; i < newlineCount; i++)
            writer.WriteLine();
        
        return writer;
    }

    public static IndentedTextWriter Append(this IndentedTextWriter writer, string text)
    {
        writer.Write(text);
        return writer;
    }
}
